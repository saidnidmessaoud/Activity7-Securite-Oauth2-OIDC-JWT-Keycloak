spring.application.name=customer-app
server.port=8083
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true

spring.security.oauth2.client.registration.google.clientId=807051440160-tpk9bdu0ei8fun4v9mblrc4n0ov8kv4a.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email

spring.security.oauth2.client.registration.github.clientId=91c4a4c020102dab16bb
spring.security.oauth2.client.registration.github.client-secret=cbc87a6523f08407424a488492d53554bc6b1cbf
spring.security.oauth2.client.provider.github.user-name-attribute=login


spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sda-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=fXNdAHbGo6BLlI0Olo7O1TX1CETCoQLq
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8083/login/oauth2/code/sda_customer-client}
spring.security.oauth2.client.registration.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/sda-realm}

spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_AUTH:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/auth}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_AUTH_TOKEN:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/token}
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_HOST_ISSUER_URI:http://localhost:8080/realms/sdia-realm}


